/*
 * Copyright (c) 2019 ThanksMister LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed
 * under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'
apply plugin: 'com.google.gms.google-services'

repositories {
    mavenCentral()
    maven { url 'https://maven.fabric.io/public' }
}


def versionMajor = 0
def versionMinor = 9
def versionPatch = 2
def versionBuild = 1 // bump for dog food builds, public betas, etc.

android {
    kapt {
        generateStubs = true
        correctErrorTypes = true
    }
    compileSdkVersion 28
    buildToolsVersion "28.0.3"
    defaultConfig {
        applicationId "com.thanksmister.iot.wallpanel"
        minSdkVersion versions.min_sdk
        targetSdkVersion versions.target_sdk
        versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}.${versionBuild}"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        ndk.abiFilters 'armeabi-v7a','arm64-v8a','x86','x86_64'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "default"

    productFlavors {
        def BASE_ENVIRONMENT = "BASE_ENVIRONMENT"
        dev {
            dimension "default"
            buildConfigField "String", BASE_ENVIRONMENT, '"DEV_ENVIRONMENT"'
            applicationId "com.thanksmister.iot.wallpanel"
            versionName "${versionMajor}.${versionMinor}.${versionPatch} Build ${versionBuild}-DEV"
        }
        qa {
            dimension "default"
            buildConfigField "String", BASE_ENVIRONMENT, '"QA_ENVIRONMENT"'
            applicationId "com.thanksmister.iot.wallpanel"
            versionName "${versionMajor}.${versionMinor}.${versionPatch} Build ${versionBuild}-QA"
        }
        prod {
            dimension "default"
            buildConfigField "String", BASE_ENVIRONMENT, '"PROD_ENVIRONMENT"'
            applicationId "com.thanksmister.iot.wallpanel"
            versionName "${versionMajor}.${versionMinor}.${versionPatch} Build ${versionBuild}"
        }
    }
}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"

    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.legacy:legacy-support-v13:1.0.0'
    implementation 'androidx.legacy:legacy-preference-v14:1.0.0'
    implementation 'androidx.preference:preference-ktx:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.vectordrawable:vectordrawable:1.1.0'
    implementation 'com.google.android.gms:play-services-vision:18.0.0'

    // Navigation
    implementation 'androidx.navigation:navigation-fragment:2.0.0-rc02'
    implementation 'androidx.navigation:navigation-ui:2.0.0-rc02'

    // RxJava
    implementation 'io.reactivex.rxjava2:rxjava:2.1.7'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'

    // LiveData + ViewModel
    implementation "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle"
    annotationProcessor "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle"
    implementation "androidx.lifecycle:lifecycle-reactivestreams:$versions.lifecycle"
    implementation "androidx.lifecycle:lifecycle-viewmodel:$versions.lifecycle"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$versions.retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$versions.retrofit"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit"

    // OKHttp
    implementation 'com.squareup.okhttp3:logging-interceptor:3.4.1'
    implementation 'com.squareup.okhttp3:okhttp:3.12.1'

    // Dagger
    implementation "com.google.dagger:dagger:$versions.dagger"
    annotationProcessor "com.google.dagger:dagger-compiler:$versions.dagger"
    implementation "com.google.dagger:dagger-android-support:$versions.dagger"
    kapt "com.google.dagger:dagger-compiler:$versions.dagger"
    implementation "com.google.dagger:dagger-android:$versions.dagger"
    annotationProcessor "com.google.dagger:dagger-android-processor:$versions.dagger"
    kapt "com.google.dagger:dagger-android-processor:$versions.dagger"

    // MQTT
    implementation 'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.2.2'
    implementation 'org.eclipse.paho:org.eclipse.paho.android.service:1.1.1', {
        exclude module: 'support-v4'
    }

    implementation 'com.koushikdutta.async:androidasync:2.1.9'

    // Logging
    implementation 'com.jakewharton.timber:timber:4.5.1'

    // Firebase
    implementation 'com.google.firebase:firebase-core:17.2.1'
    implementation 'com.google.firebase:firebase-analytics:17.2.1'

    // (Recommended) Add Analytics
    implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'

    implementation('com.crashlytics.sdk.android:crashlytics:2.10.1@aar') {
        transitive = true;
    }

    // Picasso image loading
    implementation 'com.squareup.picasso:picasso:2.71828'
}

configurations.all {
    resolutionStrategy {
        force "com.android.support:appcompat-v7:$versions.support"
    }
}

/*configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion '25.3.0'
            }
        }
    }
}*/
